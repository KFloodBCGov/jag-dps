kind: Template
apiVersion: v1
metadata:
  name: dps-validation-service-deployment-config
  creationTimestamp: null
parameters:
  - name: NAME
    displayName: Name
    description: A prefix appended to all objects
    required: true
  - name: SOURCE_CONTEXT_DIR
    required: true
  - name: SOURCE_REPOSITORY_URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    required: true
  - name: OC_PREFIX
    required: true
  - name: OC_APP
    required: true
  - name: VERSION
    required: true
  # TODO value needs to change at some point
  - name: DFCMS_BASE_PATH
    required: true
    value: ""
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      creationTimestamp:
      labels: ${NAME}:latest
        io.kompose.service: 
      name: ${NAME}
    spec:
      ports:
      - name: "8082"
        port: 8082
        targetPort: 8082
      selector:
        io.kompose.service: ${NAME}
    status:
      loadBalancer: {}
  - kind: ImageStream
    apiVersion: v1
    metadata:
      creationTimestamp:
      labels:
        io.kompose.service: ${NAME}
      name: ${NAME}
    spec:
      tags:
      - annotations: null
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
        generation: null
        importPolicy: {}
        name: latest
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        kompose.cmd: kompose convert --provider=openshift --build=deploy-config --build-repo=${SOURCE_REPOSITORY_URL}
        kompose.version: 1.18.0 (06a2e56)
      creationTimestamp: null
      labels:
        io.kompose.service: ${NAME}
      name: ${NAME}
    spec:
      replicas: 2
      selector:
        io.kompose.service: ${NAME}
      strategy:
        resources: {}
      template:
        metadata:
          creationTimestamp:
          labels:
            io.kompose.service: ${NAME}
        spec:
          containers:
          - image: ''
            name: ${NAME}
            ports:
            - containerPort: 8081
            resources: {}
          restartPolicy: Always
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${NAME}
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
    status: {}
