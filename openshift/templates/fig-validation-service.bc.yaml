---
kind: Template
apiVersion: v1
metadata:
  name: fig-validation-service-build
  annotations:
    openshift.io/display-name: "Figaro Validation Service Build"
    description: The Figaro Validation Service builder
    tags: java
    template.openshift.io/provider-display-name: BCGov
    template.openshift.io/documentation-url: https://github.com/bcgov/jag-dps/
parameters:
  - name: NAME
    displayName: Name
    description: A prefix appended to all objects
    required: true
    value: "fig-validation-service"
  - name: SOURCE_CONTEXT_DIR
    required: true
    value: src
  - name: SOURCE_REPOSITORY_URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    required: true
    value: master
  - name: OC_PREFIX
    required: true
  - name: OC_APP
    required: true
  - name: VERSION
    required: true
  - name: DPS_SERVICE_NAME
    required: true
    value: figvalidationservice
  - name: MVN_PROFILES
    required: true
    value: 'figvalidationservice,splunk'
  - name: spring_profiles_active
    required: true
    value: 'cloud'
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: '${NAME}'
      name: '${NAME}'
    spec:
      tags:
      - annotations: null
        from:
          kind: DockerImage
          name: '${NAME}'
        generation: null
        importPolicy: {}
        name: latest
    status:
      dockerStrategy: 
        dockerfilePath: openshift.dockerfile
      dockerImageRepository: ""
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: '${NAME}'
      name: '${NAME}'
    spec:
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: src/
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        dockerStrategy:
          env:
          - name: DPS_SERVICE_NAME
            value: ${DPS_SERVICE_NAME}
          - name: MVN_PROFILES
            value: ${MVN_PROFILES}
          - name: spring_profiles_active
            value: ${spring_profiles_active}
        type: Docker
      triggers:
      - type: ConfigChange
    status:
      lastVersion: 0
